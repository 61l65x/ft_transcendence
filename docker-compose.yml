
volumes:
  db_volume:

networks:
  tr_network:
    name: tr_network
    driver: bridge

services:

  tr_front:
    build: srcs/frontend
    image: tr_front
    container_name: tr_front
    volumes:
        - ./srcs/frontend:/app
    environment:
      - NGINX_PORT=${NGINX_PORT}
      - DJANGO_PORT=${DJANGO_PORT}
      - TZ=UTC
    networks:
      tr_network:
        aliases:
          - tr-front
    ports:
      - "8443:8443"

  tr_back:
    build: srcs/backend
    image: tr_back
    container_name: tr_back
    volumes:
        - ./srcs/backend:/app
    environment:
      - HCP_CLIENT_ID=${HCP_CLIENT_ID}
      - HCP_CLIENT_SECRET=${HCP_CLIENT_SECRET}
      - DEBUG=${DEBUG}
      - DJANGO_PORT=${DJANGO_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=UTC
    networks:
      tr_network:
        aliases:
          - tr-back
    ports:
        - "${DJANGO_PORT}:${DJANGO_PORT}"
    depends_on:
      - tr_db
  tr_db:
    image: postgres:17.3-alpine3.21
    container_name: tr_db
    volumes:
      - db_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TZ=UTC
    networks:
      tr_network:
        aliases:
          - tr-db
    expose:
      - ${POSTGRES_PORT}
    restart: always


  # Monitoring services Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./srcs/server-tools/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      tr_network:
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.listen-address=0.0.0.0:9090
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
      - --web.external-url=https://localhost:8443/prometheus/
    expose:
      - 9090
    environment:
      - TZ=UTC
      - NGINX_PORT=${NGINX_PORT}
      - DJANGO_PORT=${DJANGO_PORT}
      - POSTGRES_PORT=${POSTGRES_PORT}
    depends_on:
      - tr_back
    restart: always

  # Prometheus Exporters for HTTP endpoints for the metric data


  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx_exporter
    command: ["-nginx.scrape-uri", "https://tr-front:8443/nginx_status"]
    expose:
      - 9113
    restart: always
    networks:
      tr_network:
        aliases:
          - nginx-exporter



  postgres_exporter:
    image: wrouesnel/postgres_exporter
    container_name: postgres_exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@tr_db:5432/${POSTGRES_DB}?sslmode=disable
    expose:
      - 9187
    restart: always
    networks:
      tr_network:
        aliases:
          - postgres-exporter

  # cadvisor:
  #   image: google/cadvisor:latest
  #   container_name: cadvisor
  #   privileged: true
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:ro
  #     - /sys:/sys:ro
  #     - /sys/fs/cgroup:/sys/fs/cgroup:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #   expose:
  #     - 8080
  #   restart: always
  #   networks:
  #     tr_network:
  #       aliases:
  #         - docker-exporter
  